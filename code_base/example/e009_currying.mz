
	class ExampleCurrying
	{
	
		static fn sum(vf:f(int)->int, a:int, b:int)-> int := 
			if( a > b )
				0
			else
				vf(a) + sum(vf, a+1, b)

		static fn main(args:String[]) {
			sum( fn(x:int):= x , 1, 10)  
			sum( fn(x:int):= x*x , 1, 10)  
		}
		
		
	}

	
	
	
	/*
	class ExampleCurrying
	{
		static fn sum(vf:f(int)->int, a:int, b:int)->int := 
			if( a > b ) 0
			else 		vf(a) + sum(vf, a+1, b)

		static fn main(args:String[])
		{
			sum( fn(x:int):= x*x , 1, 10)  
		}

	}
	*/
	
	/*
	abstract class Sum {
		int sum(int a, int b) {
			return (a > b) ? 0 : (oper(a) + sum(a + 1, b));
		}
		
		abstract int oper(int a);
	}

	class Ints extends Sum {
		int oper(int a) { return a; }
	}

	class Squares extends Sum {
		int oper(int a) { return a * a; }
	}

	public class ExampleCurrying 
	{
		public static void main(String[] args) {
			new Ints().sum(1, 10);
			new Squares().sum(1, 10);
		} 
	}
	*/
	
	
	
	
	
	
	
	